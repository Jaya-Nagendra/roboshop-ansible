- name: Install shipping components
  hosts: shipping
  become: yes
  tasks:
    - name: Install maven
      ansible.builtin.yum:
        name: maven 
        state: installed

    - name: check roboshop user exists or not
      ansible.builtin.command: id roboshop
      register: output     # output is a variable name.
      ignore_errors: true     

    - name: create user roboshop
      become: yes
      ansible.builtin.user:
        name: roboshop

      when: output.rc !=0        

    - name: check app directory exist or not
      ansible.builtin.stat:
        path: /app
      register: directory

    - name: print the directory status
      ansible.builtin.debug:
        msg: "output: {{directory}}"

    - name: create /app directory
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == False    

    - name: download shipping artifact
      ansible.builtin.unarchive:
        src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /app
        remote_src: yes

    - name: maven package 
      ansible.builtin.command: mvn clean package
      args: 
        chdir: /app

    - name: rename jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: copy shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service      

    - name: demamon reload
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Install mysql client
      ansible.builtin.yum:
        name: mysql
        state: installed    

    - name: load mysql schema
      ansible.builtin.shell: mysql -h mysql.ljnag.space -uroot -pRoboShop@1 < /app/schema/shipping.sql       

    - name: Restart shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
        enabled: true
       